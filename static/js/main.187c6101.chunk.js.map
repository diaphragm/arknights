{"version":3,"sources":["component/Title.js","component/TagButton.js","component/ClearButton.js","component/ButtonList.js","component/Result.js","component/Output.js","lib/fetch.js","lib/calculate.js","component/App.js","serviceWorker.js","index.js"],"names":["Title","className","TagButton","label","value","onChange","checked","push","join","onClick","ClearButton","ButtonList","list","onChecked","includes","filter","x","ButtonTable","map","group","i","key","Result","tags","chars","minRarity","Math","min","char","rarity","rareChars","resultRrarity","length","tag","j","flat","find","button","name","Output","result","console","log","fetchCharacterTable","a","fetch","json","fetchGachaTable","fetchCharData","Promise","all","characterTable","gachaTable","availableCharNameList","recruitDetail","replace","match","l","split","c","trim","Object","entries","tagList","position","profession","findCharacter","charData","every","App","React","useState","setCharData","isCharDataLoaded","setIsCharDataLoaded","checkedTagList","setCheckedTagList","setResult","useEffect","Array","keys","reverse","combination","nums","k","ans","row","slice","concat","calculateAvailableCharacters","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.187c6101.chunk.js","sourcesContent":["import React from 'react'\nimport '../style/Title.css'\n\nconst Title = () => {\n  return (\n    <div className=\"Title\"><span>アークナイツ</span> <span>公開求人検索</span></div>\n  )\n}\n\nexport default Title\n","import React from 'react'\nimport 'style/TagButton.css'\nimport 'style/common/tag.css'\n\nconst TagButton = ({ label, value, onChange, checked }) => {\n  const handleChange = () => {\n    if (onChange) {\n      onChange({ label, value, checked: !checked })\n    }\n  }\n\n  const className = ['TagButton', 'tag']\n  if (checked) className.push('checked')\n\n  return (\n    <div className={className.join(' ')} onClick={handleChange}>{label}</div>\n  )\n}\n\nexport default TagButton\n","import React from 'react'\nimport 'style/ClearButton.css'\nimport 'style/common/tag.css'\n\nconst ClearButton = ({ onClick }) => {\n  return (\n    <span className=\"ClearButton tag\" onClick={onClick}>×</span>\n  )\n}\n\nexport default ClearButton\n","import React from 'react'\nimport 'style/ButtonList.css'\nimport TagButton from 'component/TagButton'\nimport ClearButton from 'component/ClearButton'\nimport ButtonTable from 'data/ButtonTable'\n\nconst ButtonList = ({list, onChange}) => {\n  const onClear = () => {\n    onChange([])\n  }\n\n  const onChecked = ({ value, checked }) => {\n    if (checked) {\n      if (!list.includes(value)) {\n        onChange([...list, value])\n      }\n    } else {\n      onChange(list.filter(x => x !== value))\n    }\n  }\n\n  return (\n    <div className=\"ButtonList\">\n      <div>\n        <ClearButton onClick={onClear} />\n      </div>\n      {ButtonTable.map((group, i) => {\n        return (\n          <div className=\"group\" key={i}>\n            {group.map(({ label, value }, i) => {\n              return (\n                <TagButton label={label} value={value} onChange={onChecked} checked={list.includes(value)} key={i} />\n              )\n            })}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ButtonList\n","import React from 'react'\nimport 'style/Result.css'\nimport 'style/common/tag.css'\nimport ButtonTable from 'data/ButtonTable'\n\nconst Result = ({tags, chars}) => {\n  const lookupButtonLabel = (value) => {\n    return ButtonTable.flat().find(button => button.value === value)\n  }\n\n  const minRarity = Math.min(...chars.map(char => char.rarity))\n  const rareChars = chars.filter(char => char.rarity >= 3)\n  const resultRrarity = rareChars.length > 0\n    ? Math.min(...rareChars.map(char => char.rarity))\n    : 0\n\n  return (\n    <div className={`Result rarity${resultRrarity}`}>\n      <div className=\"tags\">\n        {tags.map((tag, j) => {\n          const label = lookupButtonLabel(tag).label\n          return <div className=\"tag\" key={j}>{label}</div>\n        })}\n      </div>\n      {resultRrarity >= 4 && <div className=\"note\">[{minRarity <= 2 && '07:40以上で'}★{resultRrarity}以上確定！]</div>}\n      <div className=\"characters\">\n        {chars.map((char, j) => {\n          return <div className=\"character\" key={j}>★{char.rarity} {char.name}</div>\n        })}\n      </div>\n    </div>\n  )\n\n}\n\nexport default Result\n","import React from 'react'\nimport 'style/Output.css'\nimport Result from 'component/Result'\n\nconst Output = ({result}) => {\n  console.log(result)\n\n  if (result.length > 0) {\n    return (\n      <div className=\"Output\">\n        {result.map(({ tags, chars }, i) => {\n          if (chars.length === 0) { return null }\n\n          return <Result tags={tags} chars={chars} key={i}/>\n        })}\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"Output noinfo\">NO INFO/</div>\n    )\n  }\n}\n\nexport default Output\n","const CHARACTER_TABLE_URL = 'https://raw.githubusercontent.com/Kengxxiao/ArknightsGameData/master/ja_JP/gamedata/excel/character_table.json'\nconst GACHA_TABLE_URL = 'https://raw.githubusercontent.com/Kengxxiao/ArknightsGameData/master/ja_JP/gamedata/excel/gacha_table.json'\n\nconst fetchCharacterTable = async () => {\n  return await (await fetch(CHARACTER_TABLE_URL)).json()\n}\n\nconst fetchGachaTable = async () => {\n  return await (await fetch(GACHA_TABLE_URL)).json()\n}\n\nexport const fetchCharData = async () => {\n  const [characterTable, gachaTable] = await Promise.all([\n    fetchCharacterTable(),\n    fetchGachaTable()\n  ])\n\n  const availableCharNameList = gachaTable.recruitDetail\n    .replace(/<@rc\\.eml>|<\\/>/g, '')\n    .match(/★+\\n.+(\\n--------------------|$)/g)\n    .map(l => l.split('\\n')[1])\n    .map(l => l.split('/'))\n    .flat()\n    .map(c => c.trim())\n\n  console.log(availableCharNameList)\n\n  return Object.entries(characterTable)\n    .filter(([, char]) => availableCharNameList.includes(char.name))\n    .map(([key, char]) => {\n      const tags = char.tagList || []\n      tags.push(char.position, char.profession)\n      if (char.rarity + 1 === 1) tags.push('ROBOT')\n      if (char.rarity + 1 === 5) tags.push('SENIOR')\n      if (char.rarity + 1 === 6) tags.push('TOP')\n\n      return { key, name: char.name, rarity: char.rarity + 1, tags }\n    })\n}\n","// https://tech-blog.s-yoshiki.com/2019/06/1342/\nexport const combination = (nums, k) => {\n  let ans = []\n  if (nums.length < k) {\n    return []\n  }\n  if (k === 1) {\n    for (let i = 0; i < nums.length; i++) {\n      ans[i] = [nums[i]]\n    }\n  } else {\n    for (let i = 0; i < nums.length - k + 1; i++) {\n      let row = combination(nums.slice(i + 1), k - 1)\n      for (let j = 0; j < row.length; j++) {\n        ans.push([nums[i]].concat(row[j]))\n      }\n    }\n  }\n  return ans\n}\n\nexport const findCharacter = (tags, charData) => {\n  return charData.filter(char => {\n    // 上級エリートタグ無しの場合は★6を除外\n    if (char.rarity === 6 && !tags.includes('TOP')) return false\n\n    return tags.every(tag => char.tags.includes(tag))\n  })\n}\n\nexport const calculateAvailableCharacters = (tags, charData) => {\n  const combineTags = [...Array(tags.length).keys()].reverse()\n    .map(i => i + 1)\n    .map(i => combination(tags, i))\n    .flat()\n\n  return combineTags.map(tags => ({ tags, chars: findCharacter(tags, charData) }))\n}\n","import React from 'react'\nimport 'style/App.css'\nimport Title from 'component/Title'\nimport ButtonList from 'component/ButtonList'\nimport Output from 'component/Output'\nimport { fetchCharData } from 'lib/fetch'\nimport { calculateAvailableCharacters } from 'lib/calculate'\n\nconst App = () => {\n  const [charData, setCharData] = React.useState([])\n  const [isCharDataLoaded, setIsCharDataLoaded] = React.useState(false)\n  const [checkedTagList, setCheckedTagList] = React.useState([])\n  const [result, setResult] = React.useState([])\n\n  // charData初期化\n  React.useEffect(() => {\n    (async () => {\n      setCharData(await fetchCharData())\n      setIsCharDataLoaded(true)\n    })()\n  }, [])\n\n  React.useEffect(() => {\n    setResult(calculateAvailableCharacters(checkedTagList, charData))\n  }, [checkedTagList, charData])\n\n  return (\n    <div className=\"App\">\n      <Title />\n      {isCharDataLoaded\n        ? (<>\n          <ButtonList list={checkedTagList} onChange={(list => setCheckedTagList(list))} />\n          <Output result={result} />\n        </>)\n        : 'Loading...'\n      }\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.css';\nimport App from 'component/App';\nimport * as serviceWorker from 'serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}